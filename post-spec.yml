openapi: '3.0.3'
info:
  title: Post Management
  version: '1.0'
servers:
  - url: https://api.server/posts


components:
  schemas:
    createPost:
      type: object
      properties:
        userId:
          type: integer
        text:
          type: string
    updatePost:
      type: object
      properties:
        text:
          type: string
    getPost:
      type: object
      properties:
        userIds:
          type: array
          description: List of User IDs for which the posts must be fetched.
          items:
            type: string
          minItems: 1
        pageCount:
          type: integer
          description: The current page number to be fetched.
        limit:
          type: integer
        sort:
          type: object
          properties:
            field:
              type: string
            direction:
              type: string
    getResponse:
      type: object
      properties:
        posts:
          type: array
          items:
            $ref: '#components/schemas/postobject'
          minItems: 0
        totalPosts:
          type: integer
    postobject:
      type: object
      properties:
        userId:
          type: string
        postId:
          type: string
        creationTime:
          type: string
        content:
          type: string
  
paths:
  /:
    post:
      tags:
      - Posts
      summary: Create Post 
      description: Use this Endpoint to create the Posts
      requestBody: 
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/createPost'
          
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
              example:
                    success: true
                    message: Post created
                    data: null
        '400':
          description: Invalid Input
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
              example:
                    success: false
                    message: userId and text is the required parameter
                    data: null
        '500':
          description: Internal server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
              example:
                    success: false
                    message: Please contact POST team
                    data: null


    patch:
      tags:
      - Posts
      summary: Update Post 
      description: Use this Endpoint to update the Post
      parameters:
        - in: path
          name: postId
          schema:
            type: integer
          required: true
      requestBody: 
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/updatePost'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
              example:
                    success: true
                    message: Post updated successfully
                    data: null
        '400':
          description: Invalid Input
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
              example:
                    success: false
                    message: Provide valid inputs
                    data: null
        '500':
          description: Internal server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
              example:
                    success: false
                    message: Please contact POST team
                    data: null
  /post/{postid}:
    parameters:
      - in: path
        name: postid
        required: true
        schema:
          type: integer
    delete:
      summary: "Delete a post"
      responses:
        '200':
          description: OK
        '404':
          description: "Post not found"
  /user/{userid}:
    delete:
      summary: "Delete all posts of an user"
      parameters:
      - in: path
        name: userid
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK
        '404':
          description: "Post not found"
  /list:
    post:
      requestBody: 
        content:
          application/json:
            schema:
              $ref : '#/components/schemas/getPost'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getResponse'
        '400':
          description: Invalid Input
          content:
            application/json:
             schema:
              type: object
              example:
                success: false
                message: "Failed to update Post as the input is invalid"

        '404':
          description: Post does not exist
          content:
            application/json:
             schema:
              type: object
              example:
                success: false
                message: "Failed to update Post as the existing post was not found"


        '500':
          description: Internal server Error


